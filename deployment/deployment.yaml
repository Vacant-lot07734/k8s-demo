apiVersion: apps/v1  # 使用的 Kubernetes API 版本，apps/v1 是目前部署控制器的主流版本。
kind: Deployment     # 资源类型，这里是 Deployment，表示会自动管理 Pod 副本（replica）和滚动更新
metadata:  
  labels:  
    app: k8s-combat  # 给资源打标签，用于查找和匹配（非常关键，后面 selector 要用到）
  name: k8s-combat  
spec:  
  replicas: 1       # 指定要运行几个副本（Pod 实例），这里是 1。
  selector:  
    matchLabels:  
      app: k8s-combat  
  template:         # 生成 Pod 的模板，Deployment 会根据它去启动 Pod：
    metadata:  
      labels:  
        app: k8s-combat  
    spec:  
      containers:  
        - name: k8s-combat  
          image: haruhi07734/k8s-combat:configmap
          # imagePullPolicy: Always  
          imagePullPolicy: IfNotPresent #  镜像拉取策略，Always 表示每次都拉取最新的镜像，IfNotPresent 表示如果本地有就不拉取
          volumeMounts: #挂载下面 APP存放的yaml格式数据
            - name: app
              mountPath: "/go/bin/app.yaml"
              subPath: APP
          envFrom: # 绑定configmap的kvdata到环境变量
            - configMapRef:
                name: k8s-combat-configmap
          env:  
            - name: PG_PWD  
              valueFrom:  
                secretKeyRef:  
                  name: k8s-combat-secret  
                  key: PWD
          resources:  
            limits:  
              cpu: "1"  
              memory: 300Mi  
            requests:  
              cpu: "0.1"  
              memory: 30Mi
      volumes:
        - name: app #挂载下面 APP存放的yaml格式数据
          configMap:
            name: k8s-combat-configmap
        
---
apiVersion: v1
kind: ConfigMap # 将配置信息存储到k8s中, 明文存储
metadata:
  name: k8s-combat-configmap
data:           # 将配置直接写入环境变量 （data部分存储KV数据，大小不超过1MB）
  PG_URL: "<存储一个数据库链接>postgres://postgres:postgres@localhost:5432/postgressslmode=disable"
  APP:  |
    name: k8s-combat
    pulsar:
      url: "pulsar://localhost:6650"
      token: "abc"

---
apiVersion: v1  
kind: Secret  
metadata:  
  name: k8s-combat-secret  
type: Opaque  
data:  
  PWD: aGFydWhpCg==

---
